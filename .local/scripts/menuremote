#!/bin/bash

MACHINES="kali\nsistemes\nraspberry"

CHOICE=$(echo -e $MACHINES | $SYSTEM_MENU -p "remote")

function launch_sistemes () {
    SESSION_NAME="zeos"
    virsh net-start default
    status=$(virsh list | grep sistemes | wc -l)
    if [ "$status" -eq "0" ]; then
        virsh start sistemes
        echo "Waiting for the VM to boot..."
        while true; do
            ssh -q alumne@sistemes exit
            if [ $? -eq 0 ]; then
                sshfs alumne@sistemes:/home/alumne/zeos $HOME/code/zeos
                break
            fi
            sleep 1
        done
    else
        ACTIONS="editor\nshutdown\nterminal\nviewer"
        action=$(echo -e $ACTIONS | $SYSTEM_MENU -p "action")
        case "$action" in
            editor)
                emacsclient -c "$HOME/code/zeos" &
                zathura $soa/documents/Zeos.pdf
                exit
            ;;
            shutdown)
                tmux kill-session -t zeos
                virsh shutdown sistemes
                exit
            ;;
            terminal)
                alacritty -e tmux attach -t $SESSION_NAME:1 &
                exit
            ;;
            viewer)
                virt-viewer sistemes &
                exit
            ;;
            *) exit
            ;;
        esac
    fi

    tmux has-session -t $SESSION_NAME 2>/dev/null
    if [ $? != 0 ]          # si no hay sesion se crea
    then
        tmux new-session -s $SESSION_NAME -d
        tmux send-keys -t $SESSION_NAME "cd ~/code/zeos && nvim ." C-m
        tmux new-window -n ssh -t $SESSION_NAME
        tmux send-keys -t $SESSION_NAME:2 "ssh sistemes" C-m
        tmux send-keys -t $SESSION_NAME:2 "cd zeos" C-m
        tmux send-keys -t $SESSION_NAME:2 "clear" C-m
    fi

    notify-send "machine is ready"
    exit

    if [ -z $TMUX ]; then   # si estamos fuera de tmux hacemos attach
        alacritty -e tmux attach -t $SESSION_NAME:1 &
    else                    # si estamos dentro solo cambiamos el cliente
        alacritty -e tmux switch-client -t $SESSION_NAME:1 &
    fi

    emacsclient -c "$SOA/zeos" &
}

function launch_kali () {
    SESSION_NAME="kali"
    status=$(virsh list | grep kali | wc -l)
    if [ "$status" -eq "0" ]; then
        virsh start kali
        echo "Waiting for the VM to boot..."
        while true; do
            ssh -q sergio@kali exit
            if [ $? -eq 0 ]; then
                notify-send "machine is ready"
                break
            fi
            sleep 1
        done
    else
        action=$(echo -e "connect\nshutdown" | $SYSTEM_MENU -p "action")
        if [ "$action" == "shutdown" ]; then
            tmux kill-session -t kali
            virsh shutdown kali
            exit
        fi
    fi

    tmux has-session -t $SESSION_NAME 2>/dev/null
    if [ $? != 0 ]          # si no hay sesion se crea
    then
        tmux new-session -s $SESSION_NAME -d
        tmux send-keys -t $SESSION_NAME "ssh kali" C-m
        tmux send-keys -t $SESSION_NAME "clear" C-m
        tmux new-window -n vpn -t $SESSION_NAME
        tmux send-keys -t $SESSION_NAME:2 "ssh kali" C-m
        tmux send-keys -t $SESSION_NAME:2 "cd dl" C-m
        tmux send-keys -t $SESSION_NAME:2 "sudo openvpn starting_point_Saizh.ovpn" C-m
    fi

    if [ -z $TMUX ]; then   # si estamos fuera de tmux hacemos attach
        alacritty -e tmux attach -t $SESSION_NAME:1 &
    else                    # si estamos dentro solo cambiamos el cliente
        alacritty -e tmux switch-client -t $SESSION_NAME:1 &
    fi
}

case "$CHOICE" in
	sistemes) launch_sistemes ;;
	kali) launch_kali ;;
	raspberry) alacritty -e ssh rp ;;
esac
