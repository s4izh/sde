set -sg terminal-overrides ",*:RGB"
set -g default-terminal "tmux-256color"

set -g mouse on

unbind C-b
set -g prefix C-a
# set-option -g prefix C-a
# bind-key C-a send-prefix

bind r source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded."

set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Open split panes with the path of the current pane.
unbind-key %
bind-key % split-window -h -c '#{pane_current_path}'
unbind-key '"'
bind-key '"' split-window -v -c '#{pane_current_path}'

# Same for new windows.
unbind-key c
bind-key c new-window -c '#{pane_current_path}'

## -- tmux-sensible

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
set -sg escape-time 0
set-option -g repeat-time 0

# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 50000

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000

# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set -g status-interval 2

# Upgrade $TERM
# set -g default-terminal "screen-256color"

# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

### -- nuevo

bind-key -n 'M-p' next-window
bind-key -n 'M-n' previous-window

# ----------- copy-mode ----------------------

set-window-option -g mode-keys vi
# bind-key y run-shell "tmux save-buffer - | xclip"
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard -in -selection clipboard"
bind-key v copy-mode
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Scroll 3 lines at a time instead of default 5; don't extend dragged selections.
bind-key -T copy-mode-vi WheelUpPane {
  select-pane
  send-keys -t'{mouse}' -X clear-selection
  send-keys -t'{mouse}' -X -N 3 scroll-up
}
bind-key -T copy-mode-vi WheelDownPane {
  select-pane
  send-keys -t'{mouse}' -X clear-selection
  send-keys -t'{mouse}' -X -N 3 scroll-down
}

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel

# ----------- !copy-mode ----------------------

# vim-like pane switching
# bind -r ^ last-window
# bind -r k select-pane -U
# bind -r j select-pane -D
# bind -r h select-pane -L
# bind -r l select-pane -R

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-Tab last-window

# bind -r T neww -c "#{pane_current_path}" "[[ -e todo.md ]] && nvim todo.md || nvim ~/vimwiki/notes/todo.md"

# bind-key -r D run-shell "tmux neww tmux-default"
bind-key -r f run-shell "tmux neww tmux-sessionizer"
# bind-key -r s run-shell "tmux neww tmux-picker"
bind-key -r M run-shell "tmux neww man.sh"
# bind-key -r N run-shell "tmux neww tmux-notes"


# set-option -g status-fg "colour255"

# set -g default-terminal "screen-256color"
# set -g status-fg colour249
# set -g status-bg colour235
set -g status-bg default
set -g status-fg white
# set -g status-style bg=default,fg=default
# set -g status-style bg=default,fg=default

set -g status-left-length 300

set -g status-left "#[fg=colour254] #S "
set -g window-status-format "#[fg=colour244] #I #W "
# set -g window-status-current-format "#[fg=colour255,noreverse,bg=colour235] #I #W "
set -g window-status-current-format "#[fg=colour255,noreverse](#I #W)"

# color agnostic
set -g status-left " #S "
set -g window-status-format " #I #W "
set -g window-status-current-format "(#I #W)"

# set -g window-status-current-format "#[fg=colour254,noreverse,bg=colour8] #I:#W* "
# set -g window-status-current-format "#[fg=colour14,noreverse] #I:#W* "

# set -g status-right "%a %m/%d %I:%M %P"
set -g status-right-length 300

# Styling for the status bar
set-option -g status-style "bg=black,fg=white"
# set-option -g status-right "#[fg=cyan]RAM: #[fg=yellow]#(free -h | awk '/Mem:/ {printf \"%.1f/%.1fGB (%.1f%%)\", $3, $2, $3/$2 * 100}') #[fg=cyan]| CPU: #[fg=green]#(top -bn1 | grep 'Cpu(s)' | awk '{printf \"%.1f%%\", $2+$4}') #[fg=cyan]| #[fg=magenta]#(hostname) #[fg=blue]%H:%M #[fg=cyan]%d-%b-%y"
# set-option -g status-right "Mem: #(free -h | awk '/Mem:/ {printf \"%.1fG/%.1fG(%.1f%%)\", $3, $2, $3/$2 * 100}') | Cpu: #(top -bn1 | grep 'Cpu(s)' | awk '{printf \"%.1f%%\", $2+$4}') | #(hostname) %H:%M %d-%b-%y "


# set-option -g status-style "bg=black,fg=white"

# Left side: Hostname
# set-option -g status-left "#[fg=green]Host: #[fg=cyan]#H #[default]"

# Right side: RAM, CPU, Date, and Time
# set-option -g status-right "#[fg=cyan]RAM: #[fg=yellow]#(free -h | awk '/Mem:/ {printf \"%.1f/%.1fGB (%.1f%%)\", $3, $2, $3/$2 * 100}') #[fg=cyan]| CPU: #[fg=green]#(top -bn1 | grep 'Cpu(s)' | awk '{printf \"%.1f%%\", $2+$4}') #[fg=cyan]| #[fg=blue]%Y-%m-%d #[fg=cyan]%H:%M:%S"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# -------- meta key switching ---------

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
# bind-key -T copy-mode-vi 'M-\\'' select-pane -l

# --- prefix + key pane switching -----

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -r 'h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -r 'j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -r 'k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -r 'l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'

# ----------------------------------

# Turn on incremental search in vi mode (it's already the default in emacs mode).
bind-key -T copy-mode-vi / command-prompt -i -I "#{pane_search_string}" -T search -p "(search down)" {
  send-keys -X search-forward-incremental "%%"
}
bind-key -T copy-mode-vi ? command-prompt -i -I "#{pane_search_string}" -T search -p "(search up)" {
  send-keys -X search-backward-incremental "%%"
}

# ----------------------------------

bind t switch-client -l

bind-key C-l clear-history
