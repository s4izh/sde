#!/usr/bin/env bash

select_project() {
    if [[ $# -eq 1 ]]; then
        echo "$1"
        return
    fi

    local folders=$(find ~/personal ~/uni/"$CURRENT_Q" ~/git ~/devel ~/devel/lanaccess ~/.local/src -mindepth 1 -maxdepth 1 -type d 2> /dev/null)
    local scripts=~/.local/scripts
    local nvim=~/.config/nvim
    local notes=~/notes
    local passwords=$PASSWORD_STORE_DIR

    local selected
    selected=$(printf "%s\n" "$folders" "$scripts" "$dotfiles" "$passwords" "$notes" "$nvim" "new" | fzf)

    [[ -z "$selected" ]] && exit 0

    # check if there are worktrees
    local worktree_dir="$selected/.worktrees"
    if [[ -d "$worktree_dir" ]]; then
        local worktrees
        worktrees=$(find "$worktree_dir" -mindepth 1 -maxdepth 1 -type d)
        selected=$(printf "%s\n%s" "$selected" "$worktrees" | fzf)
        [[ -z "$selected" ]] && exit 0
    fi

    echo "$selected"
}

handle_new_project() {
    local project_name
    project_name=$(echo "" | fzf --print-query)

    if [[ -n "$project_name" ]]; then
        local new_path="~/personal/$project_name"
        mkdir -p "$new_path"
        echo "$new_path"
    else
        exit 0
    fi
}

find_and_run_custom_handler() {
    local selected_path="$1"
    local path_suffix
    path_suffix=$(echo "$selected_path" | sed "s#$HOME/##g")

    local script
    script=$(grep "^PROJECT_PATH=\"\$HOME/$path_suffix\"" ~/.local/scripts/tmux/* 2>/dev/null | cut -d: -f1)
    if [[ -n "$script" ]]; then
        sh "$script"
        exit 0
    fi

    script=$(grep "^PROJECT_PATH=\"\$HOME/$path_suffix\"" ~/.local/scripts2/* 2>/dev/null | cut -d: -f1)
    if [[ -n "$script" ]]; then
        sh "$script"
        exit 0
    fi

    if [[ -f "$selected_path/.tmuxp.yaml" ]]; then
        tmuxp load "$selected_path/.tmuxp.yaml"
        exit 0
    fi

    if [[ -f "$selected_path/.tmux" ]]; then
        sh "$selected_path/.tmux"
        exit 0
    fi
}

get_session_name() {
    local selected_path="$1"
    local session_name

    if [[ "$selected_path" == *".worktrees"* ]]; then
        # name like "main-project_worktree-name"
        local worktree_name
        worktree_name=$(basename "$selected_path")
        local main_project_name
        main_project_name=$(basename "$(dirname "$(dirname "$selected_path")")")
        session_name="${main_project_name}_${worktree_name}"
    else
        session_name=$(basename "$selected_path")
    fi

    echo "$session_name" | tr . _
}

create_or_attach_session() {
    local session_name="$1"
    local target_path="$2"
    local tmux_running
    tmux_running=$(pgrep tmux)

    if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
        tmux new-session -s "$session_name" -c "$target_path"
        exit 0
    fi

    if ! tmux has-session -t="$session_name" 2>/dev/null; then
        tmux new-session -ds "$session_name" -c "$target_path"
    fi

    if [[ -z $TMUX ]]; then
        tmux attach-session -t "$session_name"
    else
        tmux switch-client -t "$session_name"
    fi
}

main() {
    local selected_path
    selected_path=$(select_project "$@")

    [[ -z "$selected_path" ]] && exit 0

    if [[ "$selected_path" == "new" ]]; then
        selected_path=$(handle_new_project)
    fi

    selected_path="${selected_path/#\~/$HOME}"

    find_and_run_custom_handler "$selected_path"

    local session_name
    session_name=$(get_session_name "$selected_path")
    
    create_or_attach_session "$session_name" "$selected_path"
}

main "$@"
